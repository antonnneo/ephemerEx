@startuml

actor User

node "Frontend" as frontend {
}

node "Nginx (Load Balancer)" as nginx {
}

node "Backend" as backend {
    component "Backend Instance 1" as b1
    component "Backend Instance 2" as b2
    component "Backend Instance 3" as b3
}

node "Database" as db {
    component "Postgres" as postgres
}

node "Liquibase" as liquibase {
}

node "Swagger" as swagger {
}

User -down-> frontend : Interacts with UI
frontend -down-> nginx : Sends requests
nginx -down-> backend : Proxies requests to instances
b1 -right-> postgres : Reads/Writes data
b2 -right-> postgres : Reads/Writes data
b3 -right-> postgres : Reads/Writes data
liquibase -down-> postgres : Runs migrations
swagger -left-> nginx : Provides API documentation

note right of liquibase
    Liquibase runs database migrations
    and shuts down after completion.
end note

note right of backend
    Multiple backend instances
    are started after Liquibase completes.
end note

note right of nginx
    Nginx acts as a load balancer,
    distributing traffic to backend instances.
end note

@enduml
